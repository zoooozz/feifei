{"remainingRequest":"/usr/local/var/www/feifei/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/feifei/src/components/Executions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/feifei/src/components/Executions.vue","mtime":1630759462142},{"path":"/usr/local/var/www/feifei/node_modules/babel-loader/lib/index.js","mtime":1630734322281},{"path":"/usr/local/var/www/feifei/node_modules/cache-loader/dist/cjs.js","mtime":1630734351377},{"path":"/usr/local/var/www/feifei/node_modules/vue-loader/lib/index.js","mtime":1630734352656}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport data from \"../mock/data\";\nexport default {\n  name: \"Executions\",\n  props: [\"canExecute\"],\n  data() {\n    return {\n      executions: data.executions,\n      isProcessed: false,\n      isFinished: false,\n      progressBarText: \"--------------------------\",\n      endExecution: {\n        name: \"打开中...\",\n        time: \"\",\n        visible: false,\n      },\n    };\n  },\n  computed: {\n    percentage() {\n      const hashL = this.progressBarText\n        .split(\"\")\n        .filter((c) => c === \"#\").length;\n      const l = this.progressBarText.length;\n      return Math.floor((hashL * 100) / l);\n    },\n  },\n  watch: {\n    canExecute: function (val) {\n      if (val === true) {\n        this.runExecutions();\n      }\n    },\n  },\n  updated() {\n    this.$emit(\"onUpdating\");\n  },\n  methods: {\n    // 逐条执行命令\n    runExecutions: async function () {\n      // 执行最后一条命令\n      setTimeout(() => {\n        this.isFinished = true;\n        this.$emit(\"onFinish\");\n      }, 500);\n    },\n  },\n};\n",{"version":3,"sources":["Executions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Executions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"executions\">\n    <!--执行命令-->\n    <p\n      class=\"code\"\n      v-for=\"(execution, index) in executions\"\n      :key=\"index\"\n      v-show=\"execution.visible\"\n    >\n      <span class=\"addon\">~</span>\n      [<span class=\"time\">{{ execution.time }}</span\n      >]\n      <span class=\"task\">{{ execution.name }}</span>\n      <span class=\"duration\" v-if=\"execution.duration !== undefined\"\n        >{{ execution.duration }} ms</span\n      >\n    </p>\n    <!--进度条-->\n    <p class=\"code\" v-show=\"isProcessed\">\n      <span class=\"addon\">~</span>\n      {{ progressBarText }}\n      <span class=\"percentage\">{{ percentage }}%</span>\n    </p>\n    <!--执行命令-->\n    <p class=\"code\" v-show=\"endExecution.visible\">\n      <span class=\"addon\">~</span>\n      [<span class=\"time\">{{ endExecution.time }}</span\n      >]\n      <span class=\"task\">{{ endExecution.name }}</span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport data from \"../mock/data\";\nexport default {\n  name: \"Executions\",\n  props: [\"canExecute\"],\n  data() {\n    return {\n      executions: data.executions,\n      isProcessed: false,\n      isFinished: false,\n      progressBarText: \"--------------------------\",\n      endExecution: {\n        name: \"打开中...\",\n        time: \"\",\n        visible: false,\n      },\n    };\n  },\n  computed: {\n    percentage() {\n      const hashL = this.progressBarText\n        .split(\"\")\n        .filter((c) => c === \"#\").length;\n      const l = this.progressBarText.length;\n      return Math.floor((hashL * 100) / l);\n    },\n  },\n  watch: {\n    canExecute: function (val) {\n      if (val === true) {\n        this.runExecutions();\n      }\n    },\n  },\n  updated() {\n    this.$emit(\"onUpdating\");\n  },\n  methods: {\n    // 逐条执行命令\n    runExecutions: async function () {\n      // 执行最后一条命令\n      setTimeout(() => {\n        this.isFinished = true;\n        this.$emit(\"onFinish\");\n      }, 500);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.executions {\n  .addon {\n    color: #68fcfb;\n  }\n  .time {\n    color: #666;\n  }\n  .task {\n    color: #009ab2;\n  }\n  .duration {\n    margin-left: 10px;\n    color: #bf36b7;\n  }\n}\n</style>"]}]}