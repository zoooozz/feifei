{"remainingRequest":"/usr/local/var/www/feifei/node_modules/thread-loader/dist/cjs.js!/usr/local/var/www/feifei/node_modules/babel-loader/lib/index.js!/usr/local/var/www/feifei/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/var/www/feifei/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/local/var/www/feifei/src/components/Executions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/local/var/www/feifei/src/components/Executions.vue","mtime":1630759462142},{"path":"/usr/local/var/www/feifei/node_modules/cache-loader/dist/cjs.js","mtime":1630734351377},{"path":"/usr/local/var/www/feifei/node_modules/thread-loader/dist/cjs.js","mtime":1630734352470},{"path":"/usr/local/var/www/feifei/node_modules/babel-loader/lib/index.js","mtime":1630734322281},{"path":"/usr/local/var/www/feifei/node_modules/cache-loader/dist/cjs.js","mtime":1630734351377},{"path":"/usr/local/var/www/feifei/node_modules/vue-loader/lib/index.js","mtime":1630734352656}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/usr/local/var/www/feifei/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _data from \"../mock/data\";\nexport default {\n  name: \"Executions\",\n  props: [\"canExecute\"],\n  data: function data() {\n    return {\n      executions: _data.executions,\n      isProcessed: false,\n      isFinished: false,\n      progressBarText: \"--------------------------\",\n      endExecution: {\n        name: \"打开中...\",\n        time: \"\",\n        visible: false\n      }\n    };\n  },\n  computed: {\n    percentage: function percentage() {\n      var hashL = this.progressBarText.split(\"\").filter(function (c) {\n        return c === \"#\";\n      }).length;\n      var l = this.progressBarText.length;\n      return Math.floor(hashL * 100 / l);\n    }\n  },\n  watch: {\n    canExecute: function canExecute(val) {\n      if (val === true) {\n        this.runExecutions();\n      }\n    }\n  },\n  updated: function updated() {\n    this.$emit(\"onUpdating\");\n  },\n  methods: {\n    // 逐条执行命令\n    runExecutions: function () {\n      var _runExecutions = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 执行最后一条命令\n                setTimeout(function () {\n                  _this.isFinished = true;\n\n                  _this.$emit(\"onFinish\");\n                }, 500);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function runExecutions() {\n        return _runExecutions.apply(this, arguments);\n      };\n    }()\n  }\n};",{"version":3,"sources":["Executions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,KAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,CAAA,YAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KAAA,CAAA,UADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA,4BAJA;AAKA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA;AAHA;AALA,KAAA;AAWA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,KAAA,GAAA,KAAA,eAAA,CACA,KADA,CACA,EADA,EAEA,MAFA,CAEA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,GAAA;AAAA,OAFA,EAEA,MAFA;AAGA,UAAA,CAAA,GAAA,KAAA,eAAA,CAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,KAAA,GAAA,GAAA,GAAA,CAAA,CAAA;AACA;AAPA,GAhBA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,GAAA,EAAA;AACA,UAAA,GAAA,KAAA,IAAA,EAAA;AACA,aAAA,aAAA;AACA;AACA;AALA,GAzBA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,KAAA,CAAA,YAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAAA;AAAA;AAAA;AAAA,8BAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,IAAA;;AACA,kBAAA,KAAA,CAAA,KAAA,CAAA,UAAA;AACA,iBAHA,EAGA,GAHA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;AAAA;AAFA;AAnCA,CAAA","sourcesContent":["<template>\n  <div class=\"executions\">\n    <!--执行命令-->\n    <p\n      class=\"code\"\n      v-for=\"(execution, index) in executions\"\n      :key=\"index\"\n      v-show=\"execution.visible\"\n    >\n      <span class=\"addon\">~</span>\n      [<span class=\"time\">{{ execution.time }}</span\n      >]\n      <span class=\"task\">{{ execution.name }}</span>\n      <span class=\"duration\" v-if=\"execution.duration !== undefined\"\n        >{{ execution.duration }} ms</span\n      >\n    </p>\n    <!--进度条-->\n    <p class=\"code\" v-show=\"isProcessed\">\n      <span class=\"addon\">~</span>\n      {{ progressBarText }}\n      <span class=\"percentage\">{{ percentage }}%</span>\n    </p>\n    <!--执行命令-->\n    <p class=\"code\" v-show=\"endExecution.visible\">\n      <span class=\"addon\">~</span>\n      [<span class=\"time\">{{ endExecution.time }}</span\n      >]\n      <span class=\"task\">{{ endExecution.name }}</span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport data from \"../mock/data\";\nexport default {\n  name: \"Executions\",\n  props: [\"canExecute\"],\n  data() {\n    return {\n      executions: data.executions,\n      isProcessed: false,\n      isFinished: false,\n      progressBarText: \"--------------------------\",\n      endExecution: {\n        name: \"打开中...\",\n        time: \"\",\n        visible: false,\n      },\n    };\n  },\n  computed: {\n    percentage() {\n      const hashL = this.progressBarText\n        .split(\"\")\n        .filter((c) => c === \"#\").length;\n      const l = this.progressBarText.length;\n      return Math.floor((hashL * 100) / l);\n    },\n  },\n  watch: {\n    canExecute: function (val) {\n      if (val === true) {\n        this.runExecutions();\n      }\n    },\n  },\n  updated() {\n    this.$emit(\"onUpdating\");\n  },\n  methods: {\n    // 逐条执行命令\n    runExecutions: async function () {\n      // 执行最后一条命令\n      setTimeout(() => {\n        this.isFinished = true;\n        this.$emit(\"onFinish\");\n      }, 500);\n    },\n  },\n};\n</script>\n\n<style lang=\"less\">\n.executions {\n  .addon {\n    color: #68fcfb;\n  }\n  .time {\n    color: #666;\n  }\n  .task {\n    color: #009ab2;\n  }\n  .duration {\n    margin-left: 10px;\n    color: #bf36b7;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}